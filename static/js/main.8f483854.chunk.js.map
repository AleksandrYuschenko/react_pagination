{"version":3,"sources":["components/ItemsList/ItemsList.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["ItemsList","itemList","map","item","total","perPage","currentPage","Array","fill","_","i","splice","Pagination","onPageChange","numberOfTabs","Math","ceil","className","classNames","href","onClick","tab","length","items","from","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","setPerPage","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAIaA,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,OACE,6BACGA,EAASC,KAAI,SAAAC,GAAI,OAChB,oBAAI,UAAQ,OAAZ,wBAA4BA,WCE9BF,EAAW,SAACG,EAAeC,EAAiBC,GAEhD,OAAO,IAAIC,MAAMH,GAAOI,KAAK,GAAGN,KAAI,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAAGC,OAAOL,EAAcD,EAAUA,EAASA,IAGlFO,EAAwB,SAAC,GAK/B,IAJLR,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAO,EACI,EADJA,aAEMC,EACG,IAAIP,MAAMQ,KAAKC,KAAKZ,EAAQC,IAAUG,KAAK,GAAGN,KAAI,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAGzE,OACE,qCACE,qBAAIO,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YACxB,CAAE,qBAAsBZ,IAAgBQ,EAAa,KADvD,SAGE,mBACE,UAAQ,WACRG,UAAU,YACVE,KAAK,QACLC,QAAS,WACPP,EAAcP,EAAc,IAE9B,gBAAeA,IAAgBQ,EAAa,GAP9C,oBAYDA,EAAaZ,KAAI,SAAAmB,GAAG,OACnB,oBACEJ,UAAWC,IACT,YACA,CACE,mBAAoBG,IAAQf,IAJlC,SAUE,mBACE,UAAQ,WACRW,UAAU,YACVE,KAAI,WAAME,GACVD,QAAS,WACHC,IAAQf,GACVO,EAAaQ,IANnB,SAUGA,KAbEA,MAkBT,oBAAIJ,UAAWC,IAAW,YACxB,CAAE,qBAAsBZ,IAAgBQ,EAAaQ,SADvD,SAGE,mBACE,UAAQ,WACRL,UAAU,YACVE,KAAK,QACLC,QAAS,WACPP,EAAcP,EAAc,IAE9B,gBAAeA,IAAgBQ,EAAaQ,OAP9C,uBAaJ,cAAC,EAAD,CAAWrB,SAAUA,EAASG,EAAOC,EAASC,SC/EpD,IAAMiB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzB3B,KAAI,SAAAyB,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB0B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KAEA,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,6BAEWA,EAAcD,EAAUA,EAAU,EAF7C,wBAGMC,EAAcD,EAAUkB,EAAMD,OAASC,EAAMD,OAAShB,EAAcD,EAH1E,yBAIQkB,EAAMD,OAJd,OAOA,sBAAKL,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAO9B,EACP+B,SAAU,SAACC,GACTL,EAAe,GACfC,GAAYI,EAAMC,OAAOH,QAP7B,UAUE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOmB,EAAMD,OACbjB,QAASA,EACTC,aAAcA,EACdO,aAAcmB,QEjDtBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8f483854.chunk.js","sourcesContent":["type Props = {\n  itemList: number[]\n};\n\nexport const ItemsList: React.FC<Props> = ({ itemList }) => {\n  return (\n    <ul>\n      {itemList.map(item => (\n        <li data-cy=\"item\">{`Item ${item}`}</li>\n      ))}\n    </ul>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { ItemsList } from '../ItemsList/ItemsList';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: React.Dispatch<React.SetStateAction<number>>,\n};\nconst itemList = (total: number, perPage: number, currentPage: number) => {\n  // eslint-disable-next-line max-len\n  return new Array(total).fill(0).map((_, i) => i + 1).splice(currentPage * perPage - perPage, perPage);\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfTabs = (() => {\n    return new Array(Math.ceil(total / perPage)).fill(0).map((_, i) => i + 1);\n  })();\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item',\n          { 'page-item disabled': currentPage === numberOfTabs[0] })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            onClick={() => {\n              onPageChange((currentPage - 1));\n            }}\n            aria-disabled={currentPage === numberOfTabs[0]}\n          >\n            «\n          </a>\n        </li>\n        {numberOfTabs.map(tab => (\n          <li\n            className={classNames(\n              'page-item',\n              {\n                'page-item active': tab === currentPage,\n              },\n            )}\n            key={tab}\n\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${tab}`}\n              onClick={() => {\n                if (tab !== currentPage) {\n                  onPageChange(tab);\n                }\n              }}\n            >\n              {tab}\n            </a>\n          </li>\n        ))}\n\n        <li className={classNames('page-item',\n          { 'page-item disabled': currentPage === numberOfTabs.length })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            onClick={() => {\n              onPageChange((currentPage + 1));\n            }}\n            aria-disabled={currentPage === numberOfTabs.length}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ItemsList itemList={itemList(total, perPage, currentPage)} />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} \n        (items ${currentPage * perPage - perPage + 1} \n        - ${currentPage * perPage > items.length ? items.length : currentPage * perPage}\n         of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setCurrentPage(1);\n              setPerPage(+event.target.value);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={+currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}